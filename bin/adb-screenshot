#!/usr/bin/env bash

require() { hash "$@" || exit 127; }

require adb
require exiftool
require osascript
require magick

if [ "$(adb get-state)" != "device" ]; then
  exit 1
fi

filename="$1"

if [ -z "$filename" ]; then
  filename=$(date -u +'adb-screenshot-%Y%m%d%H%M%S.png')
fi

adb exec-out input keyevent KEYCODE_WAKEUP

adb exec-out log -t screencap "screenshot to $filename"

is_square() {
  size=$(adb exec-out wm size 2>/dev/null) && \
  [[ $size =~ Physical\ size:\ ([0-9]+)x([0-9]+) ]] && \
  [[ ${BASH_REMATCH[1]} -eq ${BASH_REMATCH[2]} ]]
}

# stderr to /dev/null because screencap can complain if there
# are multiple displays (e.g. Samsung Flip). Investigate
# `adb exec-out dumpsys SurfaceFlinger --display-id` if want to
# check for multiple displays.
if is_square; then

  # Apply circular mask if on square display (i.e. assume Wear if square display)
  adb exec-out "screencap -p 2>/dev/null" | magick - \
    -alpha set -background none -fill white \
      \( +clone -channel A -evaluate set 0 +channel -draw "circle %[fx:(w-1)/2],%[fx:(h-1)/2] %[fx:(w-1)/2],0.5" \) \
    -compose dstin -composite \
	png:"$filename"

else

  adb exec-out "screencap -p 2>/dev/null" > "$filename"

fi

# Some devices (Pixel 7) report a "Physical" and "Override" density, so just take one line
DPI=$(adb exec-out wm density | tail -1 | awk '{ print $NF }')
exiftool -overwrite_original_in_place -XResolution="$DPI" -YResolution="$DPI" "$filename"

/usr/bin/osascript - "$filename" << END 2>&1 | grep -v CFURLGetFSRef

on run argv
  # https://stackoverflow.com/a/30578507/11543
  # "as PNG" doesn't work, but "as JPEG" seems fine...
  set the clipboard to (read (POSIX file (first item of argv)) as JPEG picture)
end

END

echo "Saved to $filename and copied to clipboard"
