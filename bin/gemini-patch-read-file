#!/usr/bin/env bash
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Finding gemini installation...${NC}"

# Find the gemini binary
GEMINI_BIN=$(which gemini 2>/dev/null || true)

if [ -z "$GEMINI_BIN" ]; then
    echo -e "${RED}Error: 'gemini' command not found in PATH${NC}"
    exit 1
fi

echo "Found gemini at: $GEMINI_BIN"

# Resolve symlinks to get the actual installation location
GEMINI_REAL=$(readlink -f "$GEMINI_BIN" 2>/dev/null || realpath "$GEMINI_BIN" 2>/dev/null || echo "$GEMINI_BIN")

if [ -z "$GEMINI_REAL" ]; then
    echo -e "${RED}Error: Could not resolve gemini binary path${NC}"
    exit 1
fi

echo "Resolved to: $GEMINI_REAL"

# Extract the base installation directory
# From: /Users/mjs/.local/lib/node_modules/@google/gemini-cli/dist/index.js
# To:   /Users/mjs/.local/lib/node_modules/@google/gemini-cli
INSTALL_DIR=$(dirname "$(dirname "$GEMINI_REAL")")

echo "Installation directory: $INSTALL_DIR"

# Construct path to fileUtils.js
FILE_UTILS="$INSTALL_DIR/node_modules/@google/gemini-cli-core/dist/src/utils/fileUtils.js"

echo -e "\n${YELLOW}Looking for fileUtils.js...${NC}"
echo "Expected location: $FILE_UTILS"

if [ ! -f "$FILE_UTILS" ]; then
    echo -e "${RED}Error: fileUtils.js not found at expected location${NC}"
    echo "Please check if the package structure has changed"
    exit 1
fi

echo -e "${GREEN}Found fileUtils.js!${NC}"

# Check current value
echo -e "\n${YELLOW}Checking current DEFAULT_MAX_LINES_TEXT_FILE value...${NC}"
CURRENT_VALUE=$(grep "DEFAULT_MAX_LINES_TEXT_FILE = " "$FILE_UTILS" | head -1)

if [ -z "$CURRENT_VALUE" ]; then
    echo -e "${RED}Error: Could not find DEFAULT_MAX_LINES_TEXT_FILE in fileUtils.js${NC}"
    exit 1
fi

echo "Current line: $CURRENT_VALUE"

# Create backup
BACKUP_FILE="${FILE_UTILS}.backup-$(date +%Y%m%d-%H%M%S)"
echo -e "\n${YELLOW}Creating backup...${NC}"
cp "$FILE_UTILS" "$BACKUP_FILE"
echo "Backup saved to: $BACKUP_FILE"

# Patch the file
echo -e "\n${YELLOW}Patching DEFAULT_MAX_LINES_TEXT_FILE from 2000 to 100000...${NC}"

# Use sed to replace (works on both macOS and Linux)
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS requires empty string after -i
    sed -i '' 's/DEFAULT_MAX_LINES_TEXT_FILE = 2000/DEFAULT_MAX_LINES_TEXT_FILE = 100000/g' "$FILE_UTILS"
else
    # Linux
    sed -i 's/DEFAULT_MAX_LINES_TEXT_FILE = 2000/DEFAULT_MAX_LINES_TEXT_FILE = 100000/g' "$FILE_UTILS"
fi

# Verify the change
NEW_VALUE=$(grep "DEFAULT_MAX_LINES_TEXT_FILE = " "$FILE_UTILS" | head -1)

echo "New line: $NEW_VALUE"

if echo "$NEW_VALUE" | grep -q "100000"; then
    echo -e "\n${GREEN}✓ Successfully patched fileUtils.js!${NC}"
    echo -e "${GREEN}✓ DEFAULT_MAX_LINES_TEXT_FILE is now set to 100000${NC}"
    echo -e "\nBackup location: $BACKUP_FILE"
    echo -e "\nThe change will take effect immediately in new gemini sessions."
else
    echo -e "\n${RED}Error: Patch may not have been applied correctly${NC}"
    echo "Restoring from backup..."
    cp "$BACKUP_FILE" "$FILE_UTILS"
    exit 1
fi

echo -e "\n${YELLOW}Note:${NC} To revert this change, run:"
echo "cp '$BACKUP_FILE' '$FILE_UTILS'"
