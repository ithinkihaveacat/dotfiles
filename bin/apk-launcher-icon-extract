#!/usr/bin/env bash

shopt -s nullglob

if [ -z "$1" ]; then
  echo "usage: $(basename "$0") apk"
  exit 1
fi

function require() { hash "$@" || exit 127; }

require unzip
require apktool
require xmllint

function match_vector() {

  GLOB="$1"
  GLOB="${GLOB/@/res\/}"
  #GLOB="${GLOB/mipmap/mipmap*anydpi*}"
  GLOB="${GLOB/mipmap/mipmap*}"
  GLOB="${GLOB}*.xml"
  
  MATCHES=($2/$GLOB)

  echo "${MATCHES[0]}"
  return

}

function match_raster() {

  densities=(xxxhdpi xxhdpi xhdpi hdpi mdpi)
  
  if [[ $1 =~ ^@drawable ]]; then
  
    for d in "${densities[@]}"; do
  
      GLOB="$1"
      GLOB="${GLOB/@/res\/}"
      GLOB="${GLOB/drawable/drawable*}"
      GLOB="${GLOB}.png"
	  
      MATCHES=($2/$GLOB)
	
        if [ ${#MATCHES[@]} -gt 0 ]; then
		  echo "${MATCHES[0]}"
		  return
        fi
	
    done
  
  elif [[ $1 =~ ^@mipmap ]]; then
  
    for d in "${densities[@]}"; do
  
      GLOB="$1"
      GLOB="${GLOB/@/res\/}"
      GLOB="${GLOB/mipmap/mipmap-${d}*}"
      GLOB="${GLOB}*.png"
  
      MATCHES=($2/$GLOB)
	
	  if [ ${#MATCHES[@]} -gt 0 ]; then
        echo "${MATCHES[0]}"
	    return
	  fi
	
    done
  
  fi
  
}

if [[ $1 == *.zip ]]; then

  TMPDIR=$(mktemp -d)
  trap 'rm -rf -- "$TMPDIR"' EXIT

  unzip -q "$1" -d "$TMPDIR"
  TMP=("$TMPDIR"/*_base_split.apk)
  BASEAPK=${TMP[0]}

  if [ ! -f "${BASEAPK[0]}" ]; then
    echo "error: *_base_split.apk not found in zip, aborting"
    exit 1
  fi

else

  BASEAPK="$1"

fi

TMPDIR=$(mktemp -d)
apktool d "$BASEAPK" -f -s -o "$TMPDIR" > /dev/null 2>&1

REFERENCE=$(xpath -n -q -e 'string(/manifest/application/@android:icon)' < "$TMPDIR"/AndroidManifest.xml)

#printf "reference: %s\n" "$REFERENCE"

VECTOR_ICON=$(match_vector "$REFERENCE" "$TMPDIR")
RASTER_ICON=$(match_raster "$REFERENCE" "$TMPDIR")

#printf "vector: %s\n" "$VECTOR_ICON"
#printf "raster: %s\n" "$RASTER_ICON"

APKNAME=$(basename $1)

if [ -n "$VECTOR_ICON" ]; then

  FILENAME=$(basename $1 .apk).xml
  xmllint --format "$VECTOR_ICON" > "$FILENAME"
  echo "$APKNAME -> $FILENAME ($REFERENCE resolved to $VECTOR_ICON)"

elif [ -n "$RASTER_ICON" ]; then

  FILENAME=$(basename $1 .apk).png
  cp "$RASTER_ICON" "$FILENAME"
  echo "$APKNAME -> $FILENAME ($REFERENCE resolved to $RASTER_ICON)"

fi

#apk-badging "$1" | awk -F\' '/^application:/ {print $4}'
